plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.4.21'
}

apply plugin: 'io.spring.dependency-management'

group = 'org.kiva'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.apache.tika:tika-core:1.17'
    implementation 'org.zeroturnaround:zt-exec:1.10'
    implementation 'org.jclarion:image4j:0.7'
    implementation 'com.github.mhshams:jnbis:2.0.2'
    implementation 'jakarta.validation:jakarta.validation-api:2.0.2'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    compile("io.projectreactor.kotlin:reactor-kotlin-extensions")
    compile 'com.datadoghq:dd-trace-api:0.42.0'
    implementation group: 'ch.qos.logback.contrib', name: 'logback-jackson', version: '0.1.5'
    implementation group: 'ch.qos.logback.contrib', name: 'logback-json-classic', version: '0.1.5'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.3'
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '11'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '11'
    }
}


configurations {
    ktlint
}

dependencies {
    ktlint "com.pinterest:ktlint:0.40.0"
    // additional 3rd party ruleset(s) can be specified here
    // just add them to the classpath (ktlint 'groupId:artifactId:version') and
    // ktlint will pick them up
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

test {
    useJUnitPlatform()
}
